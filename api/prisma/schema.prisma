// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      UserRole
  turmas    Turma[]
  grupoId   Int?
  grupo     Grupo?   @relation(fields: [grupoId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  PROFESSOR
  ALUNO
}

model Turma {
  id     Int     @id @default(autoincrement())
  name   String
  userId Int
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  grupos Grupo[]
}

model Grupo {
  id         Int         @id @default(autoincrement())
  name       String
  turmaId    Int
  turma      Turma       @relation(fields: [turmaId], references: [id], onDelete: Cascade)
  notes      Note[]
  atividades Atividade[]
  user       User[]
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  createdAt DateTime @default(now())
  grupoId   Int
  grupo     Grupo    @relation(fields: [grupoId], references: [id], onDelete: Cascade)
}

model Atividade {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime?
  // status atividadeStatus
  grupoId     Int?
  grupo       Grupo?    @relation(fields: [grupoId], references: [id], onDelete: Cascade)
}

// enum atividadeStatus {
//   NAO_INICIADA
//   EM_PROCESSO
//   AGUARDANDO_CORRECAO
//   FINALIZADA
// }